<div class="container-fluid py-4">
    <!-- Filter and Sort Controls -->
    <div class="row mb-3">
        <div class="col-md-3">
            <select class="form-select" id="filterCategory">
                <option value="">Filter by Category</option>
                <% categories.forEach(category => { %>
                    <option value="<%= category._id %>"><%= category.name %></option>
                <% }); %>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="filterBrand">
                <option value="">Filter by Brand</option>
                <% brands.forEach(brand => { %>
                    <option value="<%= brand %>"><%= brand %></option>
                <% }); %>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="sortBy">
                <option value="">Sort by...</option>
                <option value="createdAt_desc">Newest First</option>
                <option value="createdAt_asc">Oldest First</option>
                <option value="price_asc">Price (Low to High)</option>
                <option value="price_desc">Price (High to Low)</option>
                <option value="totalPurchases_desc">Most Purchased</option>
                <option value="totalPurchases_asc">Least Purchased</option>
            </select>
        </div>
    </div>

    <!-- Products Table -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Products List</h3>
            <div class="card-tools">
                <a href="/admin/products/create" class="btn btn-primary">Add New Product</a>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Brand</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Total Purchases</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="productsTableBody">
                        <% products.forEach(product => { %>
                            <tr>
                                <td>
                                    <img src="<%= product.images?.[0]?.url || '/images/default.jpg' %>" 
                                         alt="<%= product.name %>"
                                         style="width: 50px; height: 50px; object-fit: cover;">
                                </td>
                                <td><%= product.name %></td>
                                <td><%= product.category?.name %></td>
                                <td><%= product.brand || '-' %></td>
                                <td>$<%= product.price.toFixed(2) %></td>
                                <td><%= product.stock %></td>
                                <td><%= product.totalPurchases || 0 %></td>
                                <td>
                                    <a href="/admin/products/<%= product._id %>/edit" 
                                       class="btn btn-sm btn-primary">Edit</a>
                                    <button onclick="deleteProduct('<%= product._id %>')"
                                            class="btn btn-sm btn-danger">Delete</button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
const currentProducts = <%- JSON.stringify(products) %>;

// Add event listeners for filters and sort
document.getElementById('filterCategory').addEventListener('change', applyFiltersAndSort);
document.getElementById('filterBrand').addEventListener('change', applyFiltersAndSort);
document.getElementById('sortBy').addEventListener('change', applyFiltersAndSort);

function applyFiltersAndSort() {
    let filteredProducts = [...currentProducts];
    
    // Apply category filter
    const categoryFilter = document.getElementById('filterCategory').value;
    if (categoryFilter) {
        filteredProducts = filteredProducts.filter(product => 
            product.category && product.category._id === categoryFilter
        );
    }
    
    // Apply brand filter
    const brandFilter = document.getElementById('filterBrand').value;
    if (brandFilter) {
        filteredProducts = filteredProducts.filter(product => 
            product.brand === brandFilter
        );
    }
    
    // Apply sorting
    const sortBy = document.getElementById('sortBy').value;
    if (sortBy) {
        const [field, order] = sortBy.split('_');
        
        filteredProducts.sort((a, b) => {
            let comparison;
            
            switch(field) {
                case 'createdAt':
                    comparison = new Date(a.createdAt) - new Date(b.createdAt);
                    break;
                case 'price':
                    comparison = a.price - b.price;
                    break;
                case 'totalPurchases':
                    comparison = (a.totalPurchases || 0) - (b.totalPurchases || 0);
                    break;
                default:
                    comparison = 0;
            }
            
            return order === 'asc' ? comparison : -comparison;
        });
    }
    
    updateTable(filteredProducts);
}

function updateTable(products) {
    const tbody = document.getElementById('productsTableBody');
    
    tbody.innerHTML = products.map(product => `
        <tr>
            <td>
                <img src="${product.images?.[0]?.url || '/images/default.jpg'}"
                     alt="${product.name}"
                     style="width: 50px; height: 50px; object-fit: cover;">
            </td>
            <td>${product.name}</td>
            <td>${product.category?.name || ''}</td>
            <td>${product.brand || '-'}</td>
            <td>$${product.price.toFixed(2)}</td>
            <td>${product.stock}</td>
            <td>${product.totalPurchases || 0}</td>
            <td>
                <a href="/admin/products/${product._id}/edit" 
                   class="btn btn-sm btn-primary">Edit</a>
                <button onclick="deleteProduct('${product._id}')"
                        class="btn btn-sm btn-danger">Delete</button>
            </td>
        </tr>
    `).join('');
}

function deleteProduct(productId) {
    if (confirm('Are you sure you want to delete this product?')) {
        fetch(`/admin/products/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert(data.error || 'Error deleting product');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting product');
        });
    }
}
</script> 