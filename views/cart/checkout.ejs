<div class="container my-5">
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-primary">Your Cart</span>
                <span class="badge bg-primary rounded-pill"><%= cart.items.length %></span>
            </h4>
            <ul class="list-group mb-3">
                <% cart.items.forEach(item => { %>
                    <li class="list-group-item d-flex justify-content-between lh-sm">
                        <div>
                            <h6 class="my-0"><%= item.product.name %></h6>
                            <small class="text-muted">Quantity: <%= item.quantity %></small>
                        </div>
                        <span class="text-muted">$<%= (item.product.price * item.quantity).toFixed(2) %></span>
                    </li>
                <% }); %>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (USD)</span>
                    <strong>$<%= cart.total.toFixed(2) %></strong>
                </li>
            </ul>
        </div>

        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Billing address</h4>
            <form id="checkout-form">
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" name="address[street]" required>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label for="ward">Ward</label>
                        <input type="text" class="form-control" id="ward" name="address[ward]" required>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="district">District</label>
                        <input type="text" class="form-control" id="district" name="address[district]" required>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="city">City</label>
                        <input type="text" class="form-control" id="city" name="address[city]" required>
                    </div>
                </div>

                <hr class="mb-4">

                <h4 class="mb-3">Payment</h4>

                <div class="d-block my-3">
                    <div class="form-check">
                        <input id="cod" name="paymentMethod" type="radio" class="form-check-input" value="cod" checked>
                        <label class="form-check-label" for="cod">Cash on Delivery</label>
                    </div>
                    <div class="form-check">
                        <input id="card" name="paymentMethod" type="radio" class="form-check-input" value="card">
                        <label class="form-check-label" for="card">Bank Transfer (Stripe)</label>
                    </div>
                </div>

                <!-- Stripe Elements will be inserted here -->
                <div id="stripe-payment-element" class="mb-3" style="display: none;"></div>

                <button class="btn btn-primary btn-lg btn-block w-100" type="submit" id="submit-button">
                    Place Order
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Add Stripe.js -->
<script src="https://js.stripe.com/v3/"></script>

<script>
    const stripe = Stripe('<%= stripePublicKey %>');
    const submitButton = document.getElementById('submit-button');
    const paymentMethodRadios = document.getElementsByName('paymentMethod');
    const stripeElement = document.getElementById('stripe-payment-element');
    let elements;

    // Handle payment method selection
    paymentMethodRadios.forEach(radio => {
        radio.addEventListener('change', (e) => {
            if (e.target.value === 'card') {
                stripeElement.style.display = 'block';
                initializeStripe();
            } else {
                stripeElement.style.display = 'none';
            }
        });
    });

    // Initialize Stripe Elements
    async function initializeStripe() {
        if (!elements) {
            try {
                const response = await fetch('/cart/create-payment-intent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        amount: <%= cart.total * 100 %> // Convert to cents
                    })
                });
                const {clientSecret} = await response.json();

                elements = stripe.elements({clientSecret});
                const paymentElement = elements.create('payment');
                paymentElement.mount('#stripe-payment-element');
            } catch (error) {
                console.error('Error initializing Stripe:', error);
                alert('Error setting up payment. Please try again.');
            }
        }
    }

    // Handle form submission
    document.getElementById('checkout-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Get form data
        const formData = {
            address: {
                street: document.getElementById('address').value,
                ward: document.getElementById('ward').value,
                district: document.getElementById('district').value,
                city: document.getElementById('city').value
            },
            paymentMethod: document.querySelector('input[name="paymentMethod"]:checked').value
        };
        
        submitButton.disabled = true;

        try {
            if (formData.paymentMethod === 'card') {
                const {error} = await stripe.confirmPayment({
                    elements,
                    confirmParams: {
                        return_url: `${window.location.origin}/cart/payment-success`
                    }
                });

                if (error) {
                    throw new Error(error.message);
                }
            } else {
                // Handle COD payment
                const response = await fetch('/cart/process-checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                const data = await response.json();
                if (data.success) {
                    window.location.href = `/orders/${data.orderId}`;
                } else {
                    throw new Error(data.error || 'Error processing order');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            alert(error.message || 'Error processing order');
            submitButton.disabled = false;
        }
    });
</script>